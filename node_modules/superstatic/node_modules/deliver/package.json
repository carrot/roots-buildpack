{
  "name": "deliver",
  "version": "0.1.9",
  "description": "Deliver local and remote static files",
  "main": "index.js",
  "scripts": {
    "test": "node test/index.js | node_modules/.bin/tspec"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/scottcorgan/deliver.git"
  },
  "keywords": [
    "static",
    "remote",
    "files",
    "serve"
  ],
  "author": {
    "name": "Scott Corgan"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/scottcorgan/deliver/issues"
  },
  "devDependencies": {
    "tape": "~2.3.2",
    "connect": "~2.12.0",
    "request": "~2.31.0",
    "tap-spec": "~0.1.3"
  },
  "dependencies": {
    "send": "~0.1.4",
    "defaults": "~1.0.0",
    "request": "~2.33.0",
    "is-url": "~1.0.0"
  },
  "readme": "# deliver\n\nDeliver local and remote static files.\n\n## Install\n\n```\nnpm install deliver --save\n```\n\n## Usage\n\n#### Local file\n\n```js\nvar deliver = require('deliver');\nvar http = require('http');\n\nhttp.createServer(function (req, res) {\n  // Conditionally set the request url\n  req.url = '/some';\n  \n  deliver(req).pipe(res);\n  \n}).listen(3000);\n```\n\n#### Remote file (proxy)\n\n```js\nvar deliver = require('deliver');\nvar http = require('http');\n\nhttp.createServer(function (req, res) {\n  // Conditionally set the request url\n  req.url = 'http://www.somewhere.com/somefile.html';\n  \n  deliver(req, {\n    statusCode: 404\n  }).pipe(res);\n  \n}).listen(3000);\n```\n\n## deliver(path[, options])\n\nReturns a stream\n\n* `path` - the path, relative or an http url, of the file to server\n* `options`\n  * `root` - set the root directory that holds the static files to serve\n  * `statusCode` - override the status code\n  * `contentType` - override the content type\n  \n## Run Tests\n\n```\nnpm install\nnpm test\n```",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/scottcorgan/deliver",
  "_id": "deliver@0.1.9",
  "_from": "deliver@0.1.9"
}
