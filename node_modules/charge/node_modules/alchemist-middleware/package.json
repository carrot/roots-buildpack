{
  "name": "alchemist-middleware",
  "version": "0.0.2",
  "author": {
    "name": "Carrot Creative",
    "email": "dev@carrotcreative.com"
  },
  "description": "Procuring static files since 1802",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/carrot/alchemist-middleware.git"
  },
  "main": "lib",
  "devDependencies": {
    "mocha": "*",
    "chai": "*",
    "chai-http": "*",
    "connect": "*",
    "coffeelint": "*",
    "istanbul": "*",
    "mocha-lcov-reporter": "*",
    "coveralls": "*",
    "coffee-script": "1.7.x"
  },
  "scripts": {
    "test": "npm run lint && mocha",
    "lint": "find lib/ -name '*.coffee' | xargs coffeelint",
    "coverage": "make build; istanbul cover _mocha --report html -- -R spec && open coverage/index.html && make unbuild",
    "coveralls": "make build; istanbul cover _mocha --report lcovonly -- -R spec && cat ./coverage/lcov.info | coveralls && rm -rf ./coverage; make unbuild"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "dependencies": {
    "st": "git://github.com/jenius/st.git",
    "lodash.defaults": "^2.4.1"
  },
  "readme": "# alchemist-middleware\n\n[![npm](http://img.shields.io/npm/v/alchemist-middleware.svg?style=flat)](https://badge.fury.io/js/alchemist-middleware) [![tests](http://img.shields.io/travis/carrot/alchemist-middleware/master.svg?style=flat)](https://travis-ci.org/carrot/alchemist-middleware) [![coverage](http://img.shields.io/coveralls/carrot/alchemist-middleware.svg?style=flat)](https://coveralls.io/r/carrot/alchemist-middleware) [![dependencies](http://img.shields.io/gemnasium/carrot/alchemist-middleware.svg?style=flat)](https://gemnasium.com/carrot/alchemist-middleware)\n\nProcuring static files since 1802.\n\n> **Note:** This project is in early development, and versioning is a little different. [Read this](http://markup.im/#q4_cRZ1Q) for more details.\n\n### Why should you care?\n\nSo there are already a number of pieces of middleware intended for serving static files. The difference with alchemist is that this one is intended *only* for serving static files. The main difference is that when a file is not found, it throws an error rather than just passing the request on. This is because when you are serving a static site, a 404 is not recoverable, other than by an error page.\n\nThis module is a light wrapper over [st](https://github.com/isaacs/st), that is designed for use as middleware and has a slightly simplified API.\n\n### Installation\n\n`npm install alchemist-middleware`\n\n### Usage\n\nAlchemist's API was designed to be quite straightforward to use. Here's a quick example:\n\n```js\nvar http = require('http'),\n    connect = require('connect'),\n    alchemist = require('alchemist-middleware');\n\nvar app = connect().use(alchemist('public'));\n\nhttp.createServer(app).listen(1111);\n```\n\nThere are a few options you can use to configure alchemist's behavior. An example is shown below with all the options filled out as their default values:\n\n```js\nalchemist('public', {\n  url: '/',            // the url to serve content from\n  gzip: true,          // use gzip to compress content before serving\n  index: 'index.html', // filename, true is auto-index, false is no directory indices\n  dot: false           // whether or not to serve dotfiles\n});\n```\n\n### License & Contributing\n\n- Details on the license [can be found here](LICENSE.md)\n- Details on running tests and contributing [can be found here](contributing.md)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/carrot/alchemist-middleware/issues"
  },
  "homepage": "https://github.com/carrot/alchemist-middleware",
  "_id": "alchemist-middleware@0.0.2",
  "_from": "alchemist-middleware@0.0.2"
}
